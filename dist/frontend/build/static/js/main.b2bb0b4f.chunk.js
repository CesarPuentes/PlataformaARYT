"use strict";
(this.webpackJsonpfrontend = this.webpackJsonpfrontend || []).push([[0], { 118: function (e, a, t) { e.exports = t(150); }, 150: function (e, a, t) {
            "use strict";
            t.r(a);
            var n = t(0), r = t.n(n), c = t(11), i = t.n(c), l = t(41), o = t(18), u = t(4), s = t(14), d = t(45), m = t(31);
            function b() { var e = Object(d.a)(["\n  mutation DeleteRelacion($id: ID) {\n    deleteRelacion(id: $id) {\n      id\n    }\n  }\n"]); return b = function () { return e; }, e; }
            function g() { var e = Object(d.a)(["\nmutation UpdateRelacion(\n  $id: ID\n  $codigo_consecutivo: String!\n  $tipo_prueba: String!\n  $nombres_candidato: String!\n  $cedula: String!\n  $cargo: String!\n  $cliente: String!\n  $precio: String!\n  $gestor: String!\n  $pagada: String!\n  $completada: String!\n  $fecha_prueba: String!\n) {\n  updateRelacion(\n    id: $id\n    codigo_consecutivo: $codigo_consecutivo\n    tipo_prueba:$tipo_prueba\n    nombres_candidato:$nombres_candidato\n    cedula:$cedula\n    cargo: $cargo \n    cliente: $cliente\n    precio:$precio \n    gestor: $gestor\n    pagada: $pagada\n    completada:$completada \n    fecha_prueba:$fecha_prueba\n  ) {\n    id\n    codigo_consecutivo\n    tipo_prueba\n    nombres_candidato\n    cedula\n    cargo\n    cliente\n    precio\n    gestor\n    completada\n    pagada\n    fecha_prueba\n\n  }\n}\n  "]); return g = function () { return e; }, e; }
            function p() { var e = Object(d.a)(["\n  mutation AddRelacion(\n    $codigo_consecutivo: String!\n    $tipo_prueba: String!\n    $nombres_candidato: String!\n    $cedula: String!\n    $cargo: String!\n    $cliente: String!\n    $precio: String!\n    $gestor: String!\n    $fecha_prueba: String!\n  ) {\n    addRelacion(\n      codigo_consecutivo: $codigo_consecutivo\n      tipo_prueba: $tipo_prueba\n      nombres_candidato: $nombres_candidato\n      cedula: $cedula\n      cargo: $cargo\n      cliente: $cliente\n      precio: $precio\n      gestor: $gestor\n      fecha_prueba: $fecha_prueba\n    ) {\n      codigo_consecutivo\n      tipo_prueba\n      nombres_candidato\n      cedula\n      cargo\n      cliente\n      precio\n      gestor\n      fecha_prueba\n    }\n  }\n"]); return p = function () { return e; }, e; }
            function h() { var e = Object(d.a)(["\n  {\n    facturas {\n      id\n      numero_factura\n      nit_cliente\n      fecha_emision\n    }\n  }\n"]); return h = function () { return e; }, e; }
            function v() { var e = Object(d.a)(["\n  {\n    relaciones {\n      id\n      codigo_consecutivo\n      tipo_prueba\n      nombres_candidato\n      cedula\n      cargo\n      cliente\n      precio\n      gestor\n      pagada\n      completada\n      fecha_prueba\n    }\n  }\n"]); return v = function () { return e; }, e; }
            function f() { var e = Object(d.a)(["\n  query GetRelacion($id: ID) {\n    relacion(id: $id) {\n      codigo_consecutivo\n      tipo_prueba\n      nombres_candidato\n      cedula\n      cargo\n      precio\n      gestor\n      facutra {\n        id\n        numero_factura\n      }\n    }\n  }\n"]); return f = function () { return e; }, e; }
            var E = Object(m.b)(f()), _ = Object(m.b)(v()), C = (Object(m.b)(h()), Object(m.b)(p())), S = Object(m.b)(g()), j = Object(m.b)(b()), O = t(184), q = t(8), N = t(196), T = t(200), $ = t(199), y = t(195), k = t(197), D = t(198), w = t(151), R = t(190), B = t(203), V = t(191), A = t(193), F = t(194), G = t(192), x = t(103), I = t.n(x), M = t(152), P = t(201), Y = t(46), L = t.n(Y), z = t(34), J = t(26), Q = t(47), H = t(48), U = t(50), W = function (e) { function a() { return Object(z.a)(this, a), Object(Q.a)(this, Object(H.a)(a).apply(this, arguments)); } return Object(U.a)(a, e), Object(J.a)(a, [{ key: "displayBookDetails", value: function () { var e = this.props.data.relacion; return e ? r.a.createElement("div", null, r.a.createElement("h2", null, e.numero), r.a.createElement("p", null, e.tipo_relacion)) : r.a.createElement("div", null, "No relacion selected..."); } }, { key: "render", value: function () { return r.a.createElement("div", { id: "relacion-details" }, this.displayBookDetails()); } }]), a; }(n.PureComponent), K = (Object(s.c)(E, { options: function (e) { return { variables: { id: e.relacionId } }; } })(W), t(187)), X = t(189), Z = Object(O.a)((function (e) { return { root: { flexGrow: 1 }, menuButton: { marginRight: e.spacing(2) }, title: { flexGrow: 1 } }; }));
            var ee = Object(l.f)((function (e) { var a = e.history, t = Z(); return r.a.createElement("div", { className: t.root }, r.a.createElement(K.a, { position: "static" }, r.a.createElement(X.a, null, r.a.createElement(R.a, { color: "inherit", onClick: function () { return a.push("/"); } }, "Home"), r.a.createElement(R.a, { color: "inherit", onClick: function () { return a.push("/listado"); } }, "Listado"), r.a.createElement(R.a, { color: "inherit", onClick: function () { return a.push("/formulario"); } }, "Formulario")))); }));
            var ae = Object(s.c)(_)((function (e) { var a = e.data; return console.log("TESSSTTTT", a), r.a.createElement("div", null); })), te = t(73), ne = Object(O.a)({ table: { minWidth: 650 } }), re = Object(q.a)((function (e) { return { root: { margin: 0, padding: e.spacing(2) }, closeButton: { position: "absolute", right: e.spacing(1), top: e.spacing(1), color: e.palette.grey[500] } }; }))((function (e) { var a = e.children, t = e.classes, n = e.onClose, c = Object(u.a)(e, ["children", "classes", "onClose"]); return r.a.createElement(V.a, Object.assign({ disableTypography: !0, className: t.root }, c), r.a.createElement(M.a, { variant: "h6" }, a), n ? r.a.createElement(G.a, { "aria-label": "close", className: t.closeButton, onClick: n }, r.a.createElement(I.a, null)) : null); })), ce = Object(q.a)((function (e) { return { root: { padding: e.spacing(2) } }; }))(A.a), ie = Object(q.a)((function (e) { return { root: { margin: 0, padding: e.spacing(1) } }; }))(F.a);
            var le = Object(s.b)(Object(s.c)(_), Object(s.c)(j, { name: "deleteRelacionMutation" }), Object(s.c)(S, { name: "updateMutation" }))((function (e) { var a = ne(), t = Object(n.useState)(0), c = Object(o.a)(t, 2), i = c[0], l = c[1], u = Object(n.useState)(""), s = Object(o.a)(u, 2), d = s[0], m = s[1], b = Object(n.useState)(""), g = Object(o.a)(b, 2), p = g[0], h = g[1], v = Object(n.useState)(""), f = Object(o.a)(v, 2), E = f[0], _ = f[1], C = Object(n.useState)(""), S = Object(o.a)(C, 2), j = S[0], O = S[1], q = Object(n.useState)(""), V = Object(o.a)(q, 2), A = V[0], F = V[1], G = Object(n.useState)(""), x = Object(o.a)(G, 2), I = x[0], M = x[1], Y = Object(n.useState)(0), z = Object(o.a)(Y, 2), J = z[0], Q = z[1], H = Object(n.useState)(""), U = Object(o.a)(H, 2), W = U[0], K = U[1], X = Object(n.useState)(""), Z = Object(o.a)(X, 2), le = Z[0], oe = Z[1], ue = Object(n.useState)(""), se = Object(o.a)(ue, 2), de = se[0], me = se[1], be = Object(n.useState)(""), ge = Object(o.a)(be, 2), pe = ge[0], he = ge[1], ve = Object(n.useState)(""), fe = Object(o.a)(ve, 2), Ee = (fe[0], fe[1], Object(n.useState)(!1)), _e = Object(o.a)(Ee, 2), Ce = _e[0], Se = _e[1], je = Object(n.useState)(!0), Oe = Object(o.a)(je, 2), qe = (Oe[0], Oe[1], r.a.useState(!1)), Ne = Object(o.a)(qe, 2), Te = Ne[0], $e = Ne[1], ye = function () { $e(!0); }, ke = function (e) { l(e[0]), m(e[1]), h(e[2]), _(e[3]), O(e[4]), F(e[5]), M(e[6]), Q(e[7]), K(e[8]), me(e[9]), oe(e[10]), he(e[11]); }, De = function () { return Se(!0); }, we = function () { return Se(!1); }, Re = function (e) { var a = te(e, "dddd, mmmm dS, yyyy"); he(a), we(); }, Be = function () { $e(!1); }, Ve = function (a, t) { e.updateMutation({ variables: { id: i, codigo_consecutivo: d, tipo_prueba: p, nombres_candidato: E, cedula: j, cargo: A, cliente: I, precio: J, gestor: W, completada: de, pagada: le, fecha_prueba: pe } }); }; return r.a.createElement("div", null, r.a.createElement(ee, null), r.a.createElement("br", null), r.a.createElement("h1", null, "Lista"), function () { var t = e.data; return t.loading ? r.a.createElement("div", null, "Loading relacion...") : r.a.createElement("div", null, r.a.createElement(y.a, { component: w.a }, r.a.createElement(N.a, { className: a.table, "aria-label": "simple table" }, r.a.createElement(k.a, null, r.a.createElement(D.a, null, r.a.createElement($.a, null, "C\xf3digo consecutivo"), r.a.createElement($.a, { align: "center" }, "Tipo Prueba"), r.a.createElement($.a, { align: "center" }, "Nombres candidato"), r.a.createElement($.a, { align: "center" }, "Cedula"), r.a.createElement($.a, { align: "center" }, "Cargo"), r.a.createElement($.a, { align: "center" }, "Cliente"), r.a.createElement($.a, { align: "center" }, "Precio"), r.a.createElement($.a, { align: "center" }, "Gestor"), r.a.createElement($.a, { align: "center" }, "Pagada"), r.a.createElement($.a, { align: "center" }, "Completada"), r.a.createElement($.a, { align: "center" }, "Fecha de registro"), r.a.createElement($.a, { align: "center" }, "Factura"), r.a.createElement($.a, { align: "center" }, "Acci\xf3n"), r.a.createElement($.a, { align: "center" }, "Acci\xf3n"), r.a.createElement($.a, { align: "center" }, " "), r.a.createElement($.a, { align: "center" }, " "))), r.a.createElement(T.a, null, t.relaciones.map((function (a, t) { return r.a.createElement(D.a, { key: a.id }, r.a.createElement($.a, { align: "center" }, a.codigo_consecutivo), r.a.createElement($.a, { align: "center" }, a.tipo_prueba), r.a.createElement($.a, { align: "center" }, a.nombres_candidato), r.a.createElement($.a, { align: "center" }, a.cedula), r.a.createElement($.a, { align: "center" }, a.cargo), r.a.createElement($.a, { align: "center" }, a.cliente), r.a.createElement($.a, { align: "center" }, a.precio), r.a.createElement($.a, { align: "center" }, a.gestor), r.a.createElement($.a, { align: "center" }, a.completada), r.a.createElement($.a, { align: "center" }, a.pagada), r.a.createElement($.a, { align: "center" }, a.fecha_prueba), r.a.createElement($.a, { align: "center" }, a.facturaId), r.a.createElement($.a, { align: "center" }, r.a.createElement(R.a, { onClick: function () { return function () { ye(); for (var e = arguments.length, a = new Array(e), t = 0; t < e; t++)
                    a[t] = arguments[t]; ke(a); }(a.id, a.codigo_consecutivo, a.tipo_prueba, a.nombres_candidato, a.cedula, a.cargo, a.cliente, a.precio, a.gestor, a.pagada, a.completada, a.fecha_prueba); } }, "Editar")), r.a.createElement(B.a, { onClose: Be, "aria-labelledby": "customized-dialog-title", open: Te }, r.a.createElement("form", { action: "/", onSubmit: function (e) { return function (e) { e.preventDefault(), l(""), m(""), h(""), _(""), O(""), F(""), M(""), Q(""), K(""), me(""), oe(""), he(""), window.location.reload(); }(e); } }, r.a.createElement(re, { id: "customized-dialog-title", onClose: Be }), r.a.createElement(ce, { dividers: !0 }, r.a.createElement("div", { className: "tabla" }, r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Numero consecutivo", onChange: function (e) { return m(e.target.value); }, value: d, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Tipo prueba", onChange: function (e) { return h(e.target.value); }, value: p, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Nombres candidato", onChange: function (e) { return _(e.target.value); }, value: E, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "cedula", onChange: function (e) { return O(e.target.value); }, value: j, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Cargo al que aspira", onChange: function (e) { return F(e.target.value); }, value: A, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Cliente", onChange: function (e) { return M(e.target.value); }, value: I, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Precio prueba", onChange: function (e) { return Q(e.target.value); }, value: J, className: "unidadTabla", type: "number" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Gestor", onChange: function (e) { return K(e.target.value); }, value: W, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Pagada", onChange: function (e) { return oe(e.target.value); }, value: le, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Completada", onChange: function (e) { return me(e.target.value); }, value: de, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Fecha prueba", onChange: function (e) { return he(e.target.value); }, value: pe, onClick: De, className: "unidadTabla" }), Ce ? r.a.createElement("div", null, r.a.createElement(L.a, { className: "centerButtons", onChange: Re }), r.a.createElement(R.a, { variant: "contained", color: "primary", href: "#contained-buttons", onClick: we, className: "centerButtons" }, "Cerrar Calendario")) : r.a.createElement(R.a, { variant: "contained", color: "primary", href: "#contained-buttons", onClick: De, className: "centerButtons" }, "A\xf1adir fecha"))), r.a.createElement(ie, null, r.a.createElement("button", { autoFocus: !0, onClick: function (e) { return Ve(e.target.value); }, color: "primary" }, "Salvar cambios")))), r.a.createElement($.a, { align: "center" }, r.a.createElement(R.a, { onClick: function (a) { return t = a.target.value, e.deleteRelacionMutation({ variables: { id: t } }), void window.location.reload(); var t; } }, r.a.createElement("div", null, "Borrar")))); }))))), r.a.createElement(ae, null)); }()); }));
            var oe = function () { return r.a.createElement("div", null, r.a.createElement(ee, null), r.a.createElement("h1", null, "This is the home page")); }, ue = t(66), se = (t(94), t(73)), de = function (e) { function a(e) { var t; return Object(z.a)(this, a), (t = Object(Q.a)(this, Object(H.a)(a).call(this, e))).onDateClick = function () { return t.setState({ showDate: !0 }); }, t.cerrarCalendario = function () { return t.setState({ showDate: !1 }); }, t.onChange = function (e) { var a = se(e, "dddd, mmmm dS, yyyy"); t.setState({ fecha_prueba: a }), t.cerrarCalendario(); }, t.handleClick = function () { t.setState({ openTitle: !0 }); }, t.handleClose = function (e, a) { "clickaway" !== a && t.setState({ openTitle: !1 }); }, t.state = { codigo_consecutivo: "ARYT_", tipo_prueba: "", nombres_candidato: "", cedula: "", cargo: "", cliente: "", precio: "", gestor: "", fecha_prueba: "", showDate: !1, openTitle: !0 }, t; } return Object(U.a)(a, e), Object(J.a)(a, [{ key: "submitForm", value: function (e) { e.preventDefault(), this.props.addRelacionMutation({ variables: { codigo_consecutivo: this.state.codigo_consecutivo, tipo_prueba: this.state.tipo_prueba, nombres_candidato: this.state.nombres_candidato, cedula: this.state.cedula, cargo: this.state.cargo, cliente: this.state.cliente, precio: this.state.precio, gestor: this.state.gestor, fecha_prueba: this.state.fecha_prueba } }), this.setState({ codigo_consecutivo: "" }), this.setState({ tipo_prueba: "" }), this.setState({ nombres_candidato: "" }), this.setState({ cedula: "" }), this.setState({ cargo: "" }), this.setState({ cliente: " " }), this.setState({ precio: 0 }), this.setState({ gestor: "" }), this.setState({ fecha_prueba: "" }), window.location.reload(); } }, { key: "render", value: function () { var e = this; this.props.classes; return r.a.createElement("div", null, r.a.createElement(ee, null), r.a.createElement("br", null), r.a.createElement("form", { onSubmit: this.submitForm.bind(this) }, r.a.createElement("div", { className: "tabla" }, r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Numero consecutivo", defaultValue: "ARYT_", value: this.state.codigo_consecutivo, onChange: function (a) { return e.setState({ codigo_consecutivo: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Tipo prueba", defaultValue: "", value: this.state.tipo_prueba, onChange: function (a) { return e.setState({ tipo_prueba: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Nombres candidato", defaultValue: "", value: this.state.nombres_candidato, onChange: function (a) { return e.setState({ nombres_candidato: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "cedula", defaultValue: "", value: this.state.cedula, onChange: function (a) { return e.setState({ cedula: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Cargo al que aspira", defaultValue: "", value: this.state.cargo, onChange: function (a) { return e.setState({ cargo: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Empresa cliente", defaultValue: "", value: this.state.cliente, onChange: function (a) { return e.setState({ cliente: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Precio prueba", defaultValue: "", value: this.state.precio, onChange: function (a) { return e.setState({ precio: a.target.value }); }, className: "unidadTabla", type: "number" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Gestor", defaultValue: "", value: this.state.gestor, onChange: function (a) { return e.setState({ gestor: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Fecha", defaultValue: this.state.date, value: this.state.fecha_prueba, onClick: this.onDateClick, onChange: function (a) { return e.setState({ gestor: a.target.value }); }, className: "unidadTabla" })), r.a.createElement("div", { className: "centerObjects" }, r.a.createElement("div", null, this.state.showDate ? r.a.createElement("div", null, r.a.createElement(L.a, { className: "centerButtons", onChange: this.onChange, value: this.state.date }), r.a.createElement(R.a, { variant: "contained", color: "primary", href: "#contained-buttons", onClick: this.cerrarCalendario, className: "centerButtons" }, "Cerrar Calendario")) : r.a.createElement(R.a, { variant: "contained", color: "primary", href: "#contained-buttons", onClick: this.onDateClick, className: "centerButtons" }, "A\xf1adir fecha")), r.a.createElement("div", null, r.a.createElement(ue.a, { trigger: r.a.createElement("button", { onClick: this.handleClick, className: "centerButtons button" }, "Ingresar datos"), position: "right center" }, r.a.createElement("div", null, "Datos enviados exitosamente!!")))))); } }]), a; }(r.a.Component), me = Object(s.b)(Object(s.c)(_, { name: "GetRelacionesQuery" }), Object(s.c)(C, { name: "addRelacionMutation" }))(de), be = t(73), ge = function (e) { function a(e) { var t; return Object(z.a)(this, a), (t = Object(Q.a)(this, Object(H.a)(a).call(this, e))).onDateClick = function () { return t.setState({ showDate: !0 }); }, t.cerrarCalendario = function () { return t.setState({ showDate: !1 }); }, t.onChange = function (e) { var a = be(e, "dddd, mmmm dS, yyyy"); t.setState({ fecha_prueba: a }), t.cerrarCalendario(); }, t.handleClick = function () { t.setState({ openTitle: !0 }); }, t.handleClose = function (e, a) { "clickaway" !== a && t.setState({ openTitle: !1 }); }, t.state = { codigo_consecutivo: "ARYT_", tipo_prueba: "", nombres_candidato: "", cedula: "", cargo: "", cliente: "", precio: 0, gestor: "", fecha_prueba: "", showDate: !1, openTitle: !0 }, console.log("*********"), console.log(t.props), t; } return Object(U.a)(a, e), Object(J.a)(a, [{ key: "submitForm", value: function (e) { e.preventDefault(), this.props.addRelacionMutation({ variables: { codigo_consecutivo: this.state.codigo_consecutivo, tipo_prueba: this.state.tipo_prueba, nombres_candidato: this.state.nombres_candidato, cedula: this.state.cedula, cargo: this.state.cargo, cliente: this.state.cliente, precio: this.state.precio, gestor: this.state.gestor, fecha_prueba: this.state.fecha_prueba } }), this.setState({ codigo_consecutivo: "" }), this.setState({ tipo_prueba: "" }), this.setState({ nombres_candidato: "" }), this.setState({ cedula: "" }), this.setState({ cargo: "" }), this.setState({ cliente: " " }), this.setState({ precio: 0 }), this.setState({ gestor: "" }), this.setState({ fecha_prueba: "" }); } }, { key: "render", value: function () { var e = this; this.props.classes; return r.a.createElement("div", null, r.a.createElement(ee, null), r.a.createElement("br", null), r.a.createElement("form", { onSubmit: this.submitForm.bind(this) }, r.a.createElement("div", { className: "tabla" }, r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Numero consecutivo", defaultValue: "ARYT_", value: this.state.codigo_consecutivo, onChange: function (a) { return e.setState({ codigo_consecutivo: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Tipo prueba", defaultValue: "", value: this.state.tipo_prueba, onChange: function (a) { return e.setState({ tipo_prueba: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Nombres candidato", defaultValue: "", value: this.state.nombres_candidato, onChange: function (a) { return e.setState({ nombres_candidato: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "cedula", defaultValue: "", value: this.state.cedula, onChange: function (a) { return e.setState({ cedula: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Cargo al que aspira", defaultValue: "", value: this.state.cargo, onChange: function (a) { return e.setState({ cargo: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Empresa cliente", defaultValue: "", value: this.state.cliente, onChange: function (a) { return e.setState({ cliente: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Precio prueba", defaultValue: "", value: this.state.precio, onChange: function (a) { return e.setState({ precio: a.target.value }); }, className: "unidadTabla", type: "number" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Gestor", defaultValue: "", value: this.state.gestor, onChange: function (a) { return e.setState({ gestor: a.target.value }); }, className: "unidadTabla" }), r.a.createElement(P.a, { required: !0, id: "standard-required", label: "Fecha", defaultValue: this.state.date, value: this.state.fecha_prueba, onClick: this.onDateClick, onChange: function (a) { return e.setState({ gestor: a.target.value }); }, className: "unidadTabla" })), r.a.createElement("div", { className: "centerObjects" }, r.a.createElement("div", null, this.state.showDate ? r.a.createElement("div", null, r.a.createElement(L.a, { className: "centerButtons", onChange: this.onChange, value: this.state.date }), r.a.createElement(R.a, { variant: "contained", color: "primary", href: "#contained-buttons", onClick: this.cerrarCalendario, className: "centerButtons" }, "Cerrar Calendario")) : r.a.createElement(R.a, { variant: "contained", color: "primary", href: "#contained-buttons", onClick: this.onDateClick, className: "centerButtons" }, "A\xf1adir fecha")), r.a.createElement("div", null, r.a.createElement(ue.a, { trigger: r.a.createElement("button", { onClick: this.handleClick, className: "centerButtons button" }, "Ingresar datos"), position: "right center" }, r.a.createElement("div", null, "Datos enviados exitosamente!!")))))); } }]), a; }(r.a.Component), pe = Object(s.b)(Object(s.c)(_, { name: "GetRelacionesQuery" }), Object(s.c)(C, { name: "addRelacionMutation" }))(ge);
            var he = function () { return r.a.createElement(l.c, null, r.a.createElement(l.a, { exact: !0, path: "/", component: oe }), r.a.createElement(l.a, { path: "/listado", component: le }), r.a.createElement(l.a, { exact: !0, path: "/formulario", component: me }), r.a.createElement(l.a, { exact: !0, path: "/editar", component: pe })); }, ve = t(52), fe = new m.a({ uri: "http://localhost:4000/graphql" });
            i.a.render(r.a.createElement(s.a, { client: fe }, r.a.createElement(ve.a, null, r.a.createElement(he, null))), document.getElementById("root"));
        }, 94: function (e, a, t) { } }, [[118, 1, 2]]]);
//# sourceMappingURL=main.b2bb0b4f.chunk.js.map
